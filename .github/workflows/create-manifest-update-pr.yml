name: Automate Microsoft 365 App Manifest Release

on:
  push:
    paths:
      '**/*.json'
    branches-ignore:
      - main
      - live 

jobs:
  create-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create or Update PR to main with curl
        id: local_to_main_pr
        run: |
          PR_TITLE="Add / Update new schema files"
          PR_BODY="This PR adds or updates app and localization schema files to the repo's main branch"
          SOURCE_BRANCH="${{ github.ref }}"  # The source branch for the PR
          DESTINATION_BRANCH="main"         # The target branch for the PR
          
          # Construct the API URL
          REPO_URL="https://api.github.com/repos/${{ github.repository }}"
          
          # Check for existing pull requests
          EXISTING_PR_RESPONSE=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "$REPO_URL/pulls?head=${{ github.repository }}:${SOURCE_BRANCH}&base=$DESTINATION_BRANCH")
      
          # Check if any PRs exist
          EXISTING_PR_NUMBER=$(echo "$EXISTING_PR_RESPONSE" | jq -r '.[0].number')
      
          if [ "$EXISTING_PR_NUMBER" != "null" ]; then
            echo "Found existing PR #$EXISTING_PR_NUMBER. Closing it..."
            
            # Close the existing PR
            curl -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              -d '{"state":"closed"}' \
              "$REPO_URL/pulls/$EXISTING_PR_NUMBER"
      
            echo "Closed existing PR #$EXISTING_PR_NUMBER."
          else
            echo "No existing PR found."
          fi
      
          # Create the pull request using curl
          RESPONSE=$(curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{\"title\":\"$PR_TITLE\", \"body\":\"$PR_BODY\", \"head\":\"$SOURCE_BRANCH\", \"base\":\"$DESTINATION_BRANCH\"}" \
            "$REPO_URL/pulls")

          echo "Response : $RESPONSE"
          # Extract PR number from the response
          PR_NUMBER=$(echo "$RESPONSE" | jq -r '.number')
          # Extract the PR URL
          PR_URL=$(echo "$RESPONSE" | jq -r '.html_url')
          
          if [ "$PR_NUMBER" == "null" || "$PR_URL" == "null"]; then
            echo "Failed to create pull request. Check the API response for details."
            exit 1
          fi
 
          
          echo "Pull Request URL: $PR_URL"
          echo "::set-output name=pr_url::$PR_URL"
          
          echo "Created Pull Request Number: $PR_NUMBER"
          echo "::set-output name=pr_number::$PR_NUMBER"

          echo "::set-output name=pr_title::$PR_TITLE"

#      - name: Send Email Notification
#        uses: dawidd6/action-send-mail@v3
#        with:
#          to: 'guptaa@microsoft.com , tich@microsoft.com, vtarasov@microsoft.com, dolumuyiwa@microsoft.com'
#          from: 'OfficeDev Repo Schema Release Bot'
#          subject: 'New Public Microsoft 365 App Manifest Schema Release PR Created'
#          body: |
#            A new pull request has been created:
#            - PR Title: ${{ steps.local_to_main_pr.outputs.pr_title }}
#            - PR Link: ${{ steps.local_to_main_pr.outputs.pr_url }}
#         server_address: 'smtp.office365.com' 
#          server_port: 587


      - name: Notify users about PR creation
        run: |
          PR_URL=${{ steps.local_to_main_pr.outputs.pr_url}}
          REPO_URL="https://api.github.com/repos/${{ github.repository }}"
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          
          # Notify users by commenting on the PR
          COMMENT="Hello @chu-tianshu @oolumuyiwa, a new PR with URL #${PR_URL} has been created. Please review it!"
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "$REPO_URL/issues/$PR_NUMBER/comments" \
            -d "{\"body\":\"$COMMENT\"}"
            
      # Poll for PR status until it's closed
      - name: Monitor PR status
        run: |
          PR_NUMBER=${{ steps.local_to_main_pr.outputs.pr_number }}
          while [ "$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER | jq -r .state)" != "closed" ]; do
              echo "PR #$PR_NUMBER is not closed yet..."
              sleep 20
          done
          echo "PR local to main with number #$PR_NUMBER has been closed!"
